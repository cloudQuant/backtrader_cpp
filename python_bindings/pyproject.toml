[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "pybind11>=2.10.0",
    "cmake>=3.16",
    "ninja; platform_system!='Windows'",
]
build-backend = "setuptools.build_meta"

[project]
name = "backtrader-cpp"
version = "0.3.0"
description = "High-performance C++ backend for Backtrader quantitative trading framework"
readme = "README.md"
license = {text = "GPL-3.0"}
authors = [
    {name = "Backtrader C++ Team", email = "team@backtrader-cpp.org"}
]
maintainers = [
    {name = "Backtrader C++ Team", email = "team@backtrader-cpp.org"}
]
keywords = [
    "trading",
    "backtesting", 
    "finance",
    "algorithmic trading",
    "quantitative finance",
    "technical analysis"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "matplotlib>=3.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-benchmark>=3.4.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "sphinx>=4.0",
    "sphinx-rtd-theme>=0.5",
    "pre-commit>=2.15.0",
]
test = [
    "pytest>=6.0",
    "pytest-benchmark>=3.4.0", 
    "pytest-cov>=2.10",
    "pytest-xdist>=2.4.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=0.5",
    "myst-parser>=0.15",
    "sphinx-autodoc-typehints>=1.12",
]
performance = [
    "numba>=0.56.0",
    "scipy>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/yunzed/backtrader_cpp"
Documentation = "https://backtrader-cpp.readthedocs.io/"
Repository = "https://github.com/yunzed/backtrader_cpp.git"
"Bug Tracker" = "https://github.com/yunzed/backtrader_cpp/issues"
Changelog = "https://github.com/yunzed/backtrader_cpp/blob/main/CHANGELOG.md"


[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=backtrader_cpp",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "benchmark: marks tests as benchmarks",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
branch = true
source = ["backtrader_cpp"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".tox",
    ".coverage",
    ".coverage.*",
    ".cache",
    "nosetests.xml",
    "coverage.xml",
    "*.cover",
    "*.log",
    ".venv",
]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["backtrader_cpp"]